name: Sync
run-name: Sync notes from garden to portfolio repository

on:
  workflow_run:
    workflows: ["Lint"]
    branches:
      - main
    types:
      - completed

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      PORTFOLIO_DIR: "./portfolio"
      PORTFOLIO_ASSETS_DIR: "/portfolio/public"
      PORTFOLIO_PROJECTS_DIR: "./portfolio/src/content/projects"
      PORTFOLIO_BLOG_DIR: "./portfolio/src/content/blog"
      CONTENT_DIR: "./content"
      ASSETS_DIR: "./ASSETS"
      PROJECTS_DIR: "./content/projects/"
      BLOG_DIR: "./content/blog/"

      GITHUB_ACTION_USERNAME: "github-actions"
      GITHUB_ACTION_EMAIL: "github-actions@github.com"
      GITHUB_ACTION_REPO: "issamsisbane/portfolio"
      GITHUB_ACTION_COMMIT_MESSAGE: "Sync notes from garden"

      GH_TOKEN: ${{ secrets.PORTFOLIO_SECRET_TOKEN }}
    steps:
      - name: Checkout Garden Repository
        uses: actions/checkout@v3

      - name: Checkout Portfolio Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GITHUB_ACTION_REPO }} 
          token: ${{ secrets.PORTFOLIO_SECRET_TOKEN }}
          path: portfolio
          ref: main

      - name: Copy assets from garden to portfolio
        run: |
          find $CONTENT_DIR -type f \( -name "*.md" -o -name "*.markdown" \) | while read -r file; do
            
            filename=$(basename "$file")
            filename_no_ext="${filename%.*}"

            # DÃ©tection du sous-chemin (blog ou projects)
            if [[ "$file" == *"/blog/"* ]]; then
              section="blog"
            else
              section="projects"
            fi

            destination_dir="$PORTFOLIO_ASSETS_DIR/$section/$filename_no_ext"

            ## Image in frontmatter treatment
            hero_image=$(awk '/^---$/ {count++} count==1 && !/^---$/ && $0 ~ /^heroImage:/ {gsub(/^heroImage:[[:space:]]*/, "", $0); print $0}' "$file")

            if [[ -n "$hero_image" ]]; then
              if [[ ! -f "$ASSETS_DIR/$hero_image" ]]; then
                echo "Hero image not found: $hero_image in $ASSETS_DIR/$hero_image"
              else
                echo "Hero image found: $hero_image in $ASSETS_DIR/$hero_image"

                if [[ ! -d ".$destination_dir" ]]; then
                  mkdir -p ".$destination_dir"
                  echo "Created directory: .$destination_dir"
                fi

                cp "$ASSETS_DIR/$hero_image" ".$destination_dir/$hero_image"

                # Remplacer le chemin de l'image dans le frontmatter
                sed -i -E "0,/^(heroImage:[[:space:]]*)$hero_image/s//\1$destination_dir\/$hero_image/" "$file"
              fi
            fi
            
            ## Image in text treatment
            grep -oP '!\[\[[^\]]+\]\]' "$file" | while read -r match; do
              image=$(echo "$match" | sed -E 's/!\[\[|\]\]//g')

              if [[ ! -f "$ASSETS_DIR/$image" ]]; then
                  echo "Image not found: $image in $ASSETS_DIR/$image"
              else
                  echo "Image found: $image in ASSETS_DIR/$image"

                  if [[ ! -d ".$destination_dir" ]]; then
                    mkdir -p ".$destination_dir"
                    echo "Created directory: .$destination_dir"
                  fi
                  sed -i -E "s|!\[\[(.*?)\]\]|![]($destination_dir/\1)|g" "$file"
                  cp "$ASSETS_DIR/$image" ".$destination_dir/$image"
              fi
            done
          done

      - name: Copy blog posts and projects notes
        run: |
          rsync -av $BLOG_DIR $PORTFOLIO_BLOG_DIR
          rsync -av $PROJECTS_DIR $PORTFOLIO_PROJECTS_DIR 
          cd $PORTFOLIO_DIR
      
      - name: Commit and Push changes to portfolio repository
        run: |
          current_datetime=$(date '+%Y-%m-%d-%H-%M-%S')
          branch_name="sync-notes-$current_datetime"

          cd portfolio

          git config --global user.name $GITHUB_ACTION_USERNAME 
          git config --global user.email $GITHUB_ACTION_EMAIL

          git checkout -b "$branch_name"

          git add .

          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "$GITHUB_ACTION_COMMIT_MESSAGE - $current_datetime"
          git push origin "$branch_name"

          gh pr create \
            --repo issamsisbane/portfolio \
            --title "Sync notes $current_datetime" \
            --body "Automated sync of notes from garden repo." \
            --base main \
            --head "$branch_name"
